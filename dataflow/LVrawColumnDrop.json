{
	"name": "LVrawColumnDrop",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "rawLVcsv",
						"type": "DatasetReference"
					},
					"name": "rawLVdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "rawLVop",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Vehicle_ID as string,",
				"          Fuel_ID as string,",
				"          Fuel_Configuration_ID as string,",
				"          Manufacturer_ID as string,",
				"          Category_ID as string,",
				"          Manufacturer as string,",
				"          Model as string,",
				"          FullModel as string,",
				"          Model_Year as string,",
				"          Fuel as string,",
				"          Alternative_Fuel_Economy_City as integer,",
				"          Alternative_Fuel_Economy_Highway as integer,",
				"          Conventional_Fuel_Economy_City as integer,",
				"          Conventional_Fuel_Economy_Highway as integer,",
				"          Transmission_Type as string,",
				"          Engine_Type as string,",
				"          Engine_Size as string,",
				"          Engine_Cylinder_Count as string,",
				"          EngineMotors_Description as string,",
				"          Manufacturer_URL as string,",
				"          Category as string,",
				"          Fuel_Code as string,",
				"          Fuel_Configuration_Name as string,",
				"          Electric_Only_Range as string,",
				"          PHEV_Total_Range as string,",
				"          PHEV_Type as string,",
				"          Notes as string,",
				"          Drivetrain as string,",
				"          Charging_Rate_Level_2_kW as string,",
				"          Charging_Rate_DC_Fast_kW as string,",
				"          Charging_Speed_Level_1_miles_added_per_hour_of_charging as string,",
				"          Charging_Speed_Level_2_miles_added_per_hour_of_charging as string,",
				"          Charging_Speed_DC_Fast_miles_added_per_hour_of_charging as string,",
				"          Battery_Voltage as string,",
				"          Battery_Capacity_Amp_Hours as string,",
				"          Battery_Capacity_kWh as string,",
				"          Seating_Capacity as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> rawLVdata",
				"rawLVdata derive(FullModel = Manufacturer+' '+Model,",
				"     partitionBy('hash', 1)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Vehicle_ID,",
				"          Manufacturer_ID,",
				"          Category_ID,",
				"          Category,",
				"          Manufacturer,",
				"          Model,",
				"          FullModel,",
				"          Model_Year,",
				"          Fuel_ID,",
				"          Fuel_Code,",
				"          Fuel,",
				"          Fuel_Configuration_ID,",
				"          Fuel_Configuration_Name,",
				"          Alternative_Fuel_Economy_City,",
				"          Alternative_Fuel_Economy_Highway,",
				"          Conventional_Fuel_Economy_City,",
				"          Conventional_Fuel_Economy_Highway,",
				"          Transmission_Type,",
				"          Engine_Type,",
				"          Engine_Size,",
				"          Engine_Cylinder_Count,",
				"          EngineMotors_Description,",
				"          Drivetrain",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          {Fuel Type Code} as string,",
				"          {Station Name} as string,",
				"          {Street Address} as string,",
				"          {Intersection Directions} as string,",
				"          City as string,",
				"          State as string,",
				"          ZIP as string,",
				"          Plus4 as string,",
				"          {Station Phone} as string,",
				"          {Status Code} as string,",
				"          {Expected Date} as string,",
				"          {Groups With Access Code} as string,",
				"          {Access Days Time} as string,",
				"          {Cards Accepted} as string,",
				"          {BD Blends} as string,",
				"          {NG Fill Type Code} as string,",
				"          {NG PSI} as string,",
				"          {EV Level1 EVSE Num} as string,",
				"          {EV Level2 EVSE Num} as string,",
				"          {EV DC Fast Count} as string,",
				"          {EV Other Info} as string,",
				"          {EV Network} as string,",
				"          {EV Network Web} as string,",
				"          {Geocode Status} as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          {Date Last Confirmed} as string,",
				"          ID as string,",
				"          {Updated At} as string,",
				"          {Owner Type Code} as string,",
				"          {Federal Agency ID} as string,",
				"          {Federal Agency Name} as string,",
				"          {Open Date} as string,",
				"          {Hydrogen Status Link} as string,",
				"          {NG Vehicle Class} as string,",
				"          {LPG Primary} as string,",
				"          {E85 Blender Pump} as string,",
				"          {EV Connector Types} as string,",
				"          Country as string,",
				"          {Intersection Directions (French)} as string,",
				"          {Access Days Time (French)} as string,",
				"          {BD Blends (French)} as string,",
				"          {Groups With Access Code (French)} as string,",
				"          {Hydrogen Is Retail} as string,",
				"          {Access Code} as string,",
				"          {Access Detail Code} as string,",
				"          {Federal Agency Code} as string,",
				"          {Facility Type} as string,",
				"          {CNG Dispenser Num} as string,",
				"          {CNG On-Site Renewable Source} as string,",
				"          {CNG Total Compression Capacity} as string,",
				"          {CNG Storage Capacity} as string,",
				"          {LNG On-Site Renewable Source} as string,",
				"          {E85 Other Ethanol Blends} as string,",
				"          {EV Pricing} as string,",
				"          {EV Pricing (French)} as string,",
				"          {LPG Nozzle Types} as string,",
				"          {Hydrogen Pressures} as string,",
				"          {Hydrogen Standards} as string,",
				"          {CNG Fill Type Code} as string,",
				"          {CNG PSI} as string,",
				"          {CNG Vehicle Class} as string,",
				"          {LNG Vehicle Class} as string,",
				"          {EV On-Site Renewable Source} as string,",
				"          {Restricted Access} as string,",
				"          {RD Blends} as string,",
				"          {RD Blends (French)} as string,",
				"          {RD Blended with Biodiesel} as string,",
				"          {RD Maximum Biodiesel Level} as string,",
				"          {NPS Unit Name} as string,",
				"          {CNG Station Sells Renewable Natural Gas} as string,",
				"          {LNG Station Sells Renewable Natural Gas} as string,",
				"          {Maximum Vehicle Class} as string,",
				"          {EV Workplace Charging} as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}